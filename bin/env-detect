#!/bin/bash
# env-detect
# Invoked by ../Makefile, we emit Make text based on study of the target environment
#  The output can be consumed by either "include [filename]" in Make
#  syntax or "source [filename]" in shell syntax, being just assignment statements.

scriptName="$(readlink -f "$0")"
scriptDir=$(command dirname -- "${scriptName}")
set -ue

die() {
    builtin echo "ERROR($(basename ${scriptName})): $*" >&2
    builtin exit 1
}

do_detect() {

    local uname_x=$(uname -a)
    DOTFILES_SYS=
    PKGMGRS=()
    local  user_detected=$(whoami)
    local Sudo=
    case $uname_x in
        *WSL2*)
            DOTFILES_SYS=wsl;;
        *codespaces*) DOTFILES_SYS=codespaces;;
        *MINGW64_NT*)
            DOTFILES_SYS=gitbash
            user_detected=$( basename ${HOME} )
            ;;
        *)
            grep -q code-server-init /proc/1/cmdline &>/dev/null && {
                DOTFILES_SYS=devxspaces
            } || {
                DOTFILES_SYS=unknown
            }
            ;;
    esac
    if ! touch /bin/root-write-test 2>/dev/null; then
        which sudo &>/dev/null && {
            Sudo=sudo
        } || :
    fi

    ISDOCKER=false
    if [[ -f /.dockerenv ]]; then
        ISDOCKER=true
    elif grep -Eq '^0::\/docker' /proc/1/cgroup 2>/dev/null; then
        ISDOCKER=true
    else
        :
    fi

    ISBB=false
    bbresponse=$( curl -IL bbgithub.dev.bloomberg.com 2>/dev/null | awk '/^HTTP/ {print $2 "\t" $0}' )
    case $bbresponse in
        301*)
            ISBB=true ;;
        400*)
            ISBB=false ;;
    esac




    ##  Package Manager Detection
    #############################

    # Is apt-get available?
    AptGetPath=$(PATH="/opt/bb/bin:$PATH" which apt-get 2>/dev/null | head -n 1)
    [[ -n "$AptGetPath" ]] && {
        PKGMGRS+=(apt-get)
    } || :

    # Is choco available?
    choco --version &>/dev/null && {
        PKGMGRS+=(choco)
    } || :

    # Is yum available?
    yum --version &>/dev/null && {
        PKGMGRS+=(yum)
    } || :

    # Is jumpstart available?
    bash -ic 'jumpstart --version; exit' 2>/dev/null | grep -q version && {
        PKGMGRS+=(jumpstart)
    } || :

    # Is shpm available?
    bash -lic 'shpm --version; exit' 2>/dev/null | grep -Eq '[0-9]*\.[0-9]*\.' && {
        PKGMGRS+=(shpm)
    } || :



    ##  Write output
    ################

    cat <<-EOF
    DOTFILES_SYS=$DOTFILES_SYS
    Code="$(which code code-server 2>/dev/null | head -n 1)"
    User=${user_detected}
    ISBB=${ISBB}
    ISDOCKER=${ISDOCKER}
    Sudo=${Sudo}
EOF

    printf "    PKG_MANAGERS='";
    [[ ${#PKGMGRS[@]} -gt 0 ]] && {
        printf '%s ' "${PKGMGRS[@]}"
    } || :
    printf "'\n"
}


set +u
[[ -z ${sourceMe} ]] && {
    set -u
    do_detect "$@"
    builtin exit
}
command true


