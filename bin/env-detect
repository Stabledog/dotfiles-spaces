#!/bin/bash
# env-detect
# Invoked by ../Makefile, we emit Make text based on study of the target environment
#  The output can be consumed by either "include [filename]" in Make
#  syntax or "source [filename]" in shell syntax, being just assignment statements.

scriptName="$(readlink -f "$0")"
scriptDir=$(command dirname -- "${scriptName}")

die() {
    builtin echo "ERROR($(basename ${scriptName})): $*" >&2
    builtin exit 1
}

do_detect() {

    local uname_x=$(uname -a)
    DOTFILES_SYS=
    case $uname_x in
        *WSL2*) DOTFILES_SYS=wsl;;
        *codespaces*) DOTFILES_SYS=codespaces;;
        *)
            grep -q code-server-init /proc/1/cmdline &>/dev/null && {
                DOTFILES_SYS=devxspaces
            } || {
                DOTFILES_SYS=unknown
            }
            ;;
    esac

    ISBB=false
    bbresponse=$( curl -IL bbgithub.dev.bloomberg.com 2>/dev/null | awk '/^HTTP/ {print $2 "\t" $0}' )
    case $bbresponse in
        301*)
            ISBB=true ;;
        400*)
            ISBB=false ;;
    esac


    cat <<-EOF
    DOTFILES_SYS=$DOTFILES_SYS
    Code="$(which code code-server 2>/dev/null | head -n 1)"
    User=$(whoami)
    ISBB=${ISBB}
EOF
}


[[ -z ${sourceMe} ]] && {
    do_detect "$@"
    builtin exit
}
command true


